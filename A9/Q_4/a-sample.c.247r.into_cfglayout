
;; Function main (main, funcdef_no=6, decl_uid=2863, cgraph_uid=7, symbol_order=6)



try_optimize_cfg iteration 1

Removing jump 9.
Removing jump 34.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

fix_loop_structure: fixing up loops for function
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 a+0 S4 A32])
        (const_int 0 [0])) "sample.c":6:9 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A64])
        (const_int 0 [0])) "sample.c":7:9 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 n+0 S4 A32])
        (const_int 13 [0xd])) "sample.c":8:9 75 {*movsi_internal}
     (nil))
(insn 8 7 23 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A64])
        (const_int 0 [0])) "sample.c":9:10 75 {*movsi_internal}
     (nil))
;;  succ:       4 [always]  (FALLTHRU)

;; basic block 3, loop depth 1, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 23 8 11 3 3 (nil) [1 uses])
(note 11 23 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (reg:SI 86)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 a+0 S4 A32])) "sample.c":10:12 75 {*movsi_internal}
     (nil))
(insn 13 12 17 3 (parallel [
            (set (reg:SI 82 [ _1 ])
                (ashift:SI (reg:SI 86)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "sample.c":10:12 655 {*ashlsi3_1}
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 a+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 17 13 18 3 (set (reg:SI 90)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A64])) "sample.c":10:10 75 {*movsi_internal}
     (nil))
(insn 18 17 19 3 (parallel [
            (set (reg:SI 89)
                (plus:SI (reg:SI 82 [ _1 ])
                    (reg:SI 90)))
            (clobber (reg:CC 17 flags))
        ]) "sample.c":10:10 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 82 [ _1 ])
            (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A64]))
        (nil)))
(insn 19 18 20 3 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 a+0 S4 A32])
        (reg:SI 89)) "sample.c":10:10 75 {*movsi_internal}
     (nil))
(insn 20 19 21 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A64])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "sample.c":9:18 209 {*addsi_1}
     (nil))
;;  succ:       4 (FALLTHRU,DFS_BACK)

;; basic block 4, loop depth 1, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [always]  (FALLTHRU)
;;              3 (FALLTHRU,DFS_BACK)
(code_label 21 20 22 4 2 (nil) [0 uses])
(note 22 21 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 22 25 4 (set (reg:SI 91)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A64])) "sample.c":9:14 75 {*movsi_internal}
     (nil))
(insn 25 24 26 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 91)
            (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 n+0 S4 A32]))) "sample.c":9:14 11 {*cmpsi_1}
     (nil))
(jump_insn 26 25 27 4 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) "sample.c":9:14 806 {*jcc}
     (nil)
 -> 23)
;;  succ:       3
;;              5 (FALLTHRU)

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 5 (set (reg:SI 92)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A64])) "sample.c":12:5 75 {*movsi_internal}
     (nil))
(insn 29 28 30 5 (set (reg:SI 4 si)
        (reg:SI 92)) "sample.c":12:5 75 {*movsi_internal}
     (nil))
(insn 30 29 31 5 (set (reg:DI 93)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f2747915360 *.LC0>)) "sample.c":12:5 74 {*movdi_internal}
     (nil))
(insn 31 30 32 5 (set (reg:DI 5 di)
        (reg:DI 93)) "sample.c":12:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f2747915360 *.LC0>)
        (nil)))
(insn 32 31 33 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) "sample.c":12:5 77 {*movqi_internal}
     (nil))
(call_insn 33 32 45 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f27477e1100 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "sample.c":12:5 824 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
;;  succ:       7 [always]  (FALLTHRU)

;; basic block 6, loop depth 1, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 45 33 36 6 5 (nil) [1 uses])
(note 36 45 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 6 (set (reg:DI 94)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f27479153f0 *.LC1>)) "sample.c":14:9 74 {*movdi_internal}
     (nil))
(insn 38 37 39 6 (set (reg:DI 5 di)
        (reg:DI 94)) "sample.c":14:9 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f27479153f0 *.LC1>)
        (nil)))
(call_insn 39 38 40 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f27477e1800 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "sample.c":14:9 824 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       7 (FALLTHRU,DFS_BACK)

;; basic block 7, loop depth 1, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 [always]  (FALLTHRU)
;;              6 (FALLTHRU,DFS_BACK)
(code_label 40 39 41 7 4 (nil) [0 uses])
(note 41 40 42 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 7 (set (reg:SI 83 [ i.0_2 ])
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A64])) "sample.c":13:12 75 {*movsi_internal}
     (nil))
(insn 43 42 44 7 (parallel [
            (set (reg:SI 95)
                (plus:SI (reg:SI 83 [ i.0_2 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "sample.c":13:12 209 {*addsi_1}
     (nil))
(insn 44 43 46 7 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 i+0 S4 A64])
        (reg:SI 95)) "sample.c":13:12 75 {*movsi_internal}
     (nil))
(insn 46 44 47 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 83 [ i.0_2 ])
            (const_int 0 [0]))) "sample.c":13:11 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 47 46 48 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) "sample.c":13:11 806 {*jcc}
     (nil)
 -> 45)
;;  succ:       6
;;              8 (FALLTHRU)

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 48 47 49 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 8 (set (reg:SI 96)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 a+0 S4 A32])) "sample.c":16:5 75 {*movsi_internal}
     (nil))
(insn 50 49 51 8 (set (reg:SI 4 si)
        (reg:SI 96)) "sample.c":16:5 75 {*movsi_internal}
     (nil))
(insn 51 50 52 8 (set (reg:DI 97)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f2747915360 *.LC0>)) "sample.c":16:5 74 {*movdi_internal}
     (nil))
(insn 52 51 53 8 (set (reg:DI 5 di)
        (reg:DI 97)) "sample.c":16:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f2747915360 *.LC0>)
        (nil)))
(insn 53 52 54 8 (set (reg:QI 0 ax)
        (const_int 0 [0])) "sample.c":16:5 77 {*movqi_internal}
     (nil))
(call_insn 54 53 55 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f27477e1100 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "sample.c":16:5 824 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 55 54 58 8 (set (reg:SI 84 [ _15 ])
        (const_int 0 [0])) "sample.c":17:12 75 {*movsi_internal}
     (nil))
(insn 58 55 62 8 (set (reg:SI 85 [ <retval> ])
        (reg:SI 84 [ _15 ])) "sample.c":18:1 75 {*movsi_internal}
     (nil))
(insn 62 58 63 8 (set (reg/i:SI 0 ax)
        (reg:SI 85 [ <retval> ])) "sample.c":18:1 75 {*movsi_internal}
     (nil))
(insn 63 62 0 8 (use (reg/i:SI 0 ax)) "sample.c":18:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

